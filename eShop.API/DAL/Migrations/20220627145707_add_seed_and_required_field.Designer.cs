// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eShop.API.DAL;

#nullable disable

namespace eShop.API.DAL.Migrations
{
    [DbContext(typeof(CatalogContext))]
    [Migration("20220627145707_add_seed_and_required_field")]
    partial class add_seed_and_required_field
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("eShop.API.DAL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Mark")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Eligible for Shipping To Mars or somewhere else",
                            Mark = 4.0499999999999998,
                            Name = "Vintage Typewriter to post awesome stories about UI design and webdev.",
                            PictureUrl = "https://www.wired.com/story/stay-in-the-moment-take-a-picture/",
                            Price = 49.5
                        },
                        new
                        {
                            Id = 2,
                            Description = "1258 bids, 359 watchers $5.95 for shipping",
                            Mark = 4.5599999999999996,
                            Name = "Lee Pucker design. Leather botinki for handsome designers. Free shipping.",
                            PictureUrl = "https://www.wired.com/story/stay-in-the-moment-take-a-picture/",
                            Price = 13.949999999999999
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
